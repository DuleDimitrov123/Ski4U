// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ski4U.Data;

namespace Ski4U.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211211193707_AddSkiItems2")]
    partial class AddSkiItems2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Ski4U.Data.Models.SkiItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsNew")
                        .HasColumnType("bit");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Season")
                        .HasColumnType("int");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SkiItems");
                });

            modelBuilder.Entity("Ski4U.Data.Models.Helmet", b =>
                {
                    b.HasBaseType("Ski4U.Data.Models.SkiItem");

                    b.Property<bool>("HelmetHasSkiGoogles")
                        .HasColumnType("bit");

                    b.Property<int>("HelmetSize")
                        .HasColumnType("int");

                    b.ToTable("Helmets");
                });

            modelBuilder.Entity("Ski4U.Data.Models.Ski", b =>
                {
                    b.HasBaseType("Ski4U.Data.Models.SkiItem");

                    b.Property<string>("SkiCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SkiLength")
                        .HasColumnType("int");

                    b.ToTable("Skis");
                });

            modelBuilder.Entity("Ski4U.Data.Models.SkiBoot", b =>
                {
                    b.HasBaseType("Ski4U.Data.Models.SkiItem");

                    b.Property<int>("SkiBootFlex")
                        .HasColumnType("int");

                    b.Property<int>("SkiBootSize")
                        .HasColumnType("int");

                    b.ToTable("SkiBoots");
                });

            modelBuilder.Entity("Ski4U.Data.Models.SkiStick", b =>
                {
                    b.HasBaseType("Ski4U.Data.Models.SkiItem");

                    b.Property<int>("SkiSticksHeight")
                        .HasColumnType("int");

                    b.ToTable("SkiSticks");
                });

            modelBuilder.Entity("Ski4U.Data.Models.Helmet", b =>
                {
                    b.HasOne("Ski4U.Data.Models.SkiItem", null)
                        .WithOne()
                        .HasForeignKey("Ski4U.Data.Models.Helmet", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ski4U.Data.Models.Ski", b =>
                {
                    b.HasOne("Ski4U.Data.Models.SkiItem", null)
                        .WithOne()
                        .HasForeignKey("Ski4U.Data.Models.Ski", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ski4U.Data.Models.SkiBoot", b =>
                {
                    b.HasOne("Ski4U.Data.Models.SkiItem", null)
                        .WithOne()
                        .HasForeignKey("Ski4U.Data.Models.SkiBoot", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ski4U.Data.Models.SkiStick", b =>
                {
                    b.HasOne("Ski4U.Data.Models.SkiItem", null)
                        .WithOne()
                        .HasForeignKey("Ski4U.Data.Models.SkiStick", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
